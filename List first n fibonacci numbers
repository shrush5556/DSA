class Solution {
    // Function to return list containing first n fibonacci numbers.
    
    
    public static int[] fibonacciNumbers(int n) {
        if (n <= 0) {
            return new int[0]; 
        }
        if (n == 1) {
            return new int[]{0}; 
        }

        // Use an ArrayList to store the Fibonacci series dynamically
        ArrayList<Integer> series = new ArrayList<>();
        int num1 = 0, num2 = 1, sum;

        // Add the first two numbers to the series
        series.add(num1);
        series.add(num2);

        // Generate the Fibonacci series
        for (int i = 2; i < n; i++) {
            sum = num1 + num2;
            series.add(sum);
            num1 = num2;
            num2 = sum;
        }

        // Convert ArrayList to an array
        int[] result = new int[series.size()];
        for (int i = 0; i < series.size(); i++) {
            result[i] = series.get(i);
        }
        return result;
    }
}
